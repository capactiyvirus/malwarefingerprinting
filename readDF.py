import gensim
from gensim import models
from gensim import corpora
from pprint import pprint
from gensim.utils import simple_preprocess
from smart_open import smart_open
import os
import numpy as np
from nltk.corpus import stopwords
import re
import logging
import gensim.downloader as api
from gensim.utils import simple_preprocess, lemmatize
from gensim.models import LdaModel, LdaMulticore
import pandas as pd
import pickle
import matplotlib.pyplot as plt
from gensim.models.coherencemodel import CoherenceModel
from collections import Counter
from gensim.models.wrappers import LdaMallet
import csv
import copy

# Plotting tools 
import pyLDAvis
import pyLDAvis.gensim  # don't skip this
import matplotlib.pyplot as plt
#%matplotlib inline


# spacy for lemmatization
import spacy

#C:\Users\imasi\Desktop\Testingfor 4480\TRIALS\Full data set\RUN 2

#"/mnt/c/Documents and Settings/imasi/Desktop/Testingfor 4480/newwords/"
#C:\Users\imasi\Desktop\Testingfor 4480\NEWRESULTS
#table_MN = pd.read_html('/mnt/c/Documents and Settings/imasi/Desktop/Testingfor 4480/TRIALS/Full data set/RUN 2/dataframe.html')
table_MN = pd.read_html('/mnt/c/Documents and Settings/imasi/Desktop/Testingfor 4480/MODEL_W_ON_W1/Dataframe.html')
df = table_MN[0]
#df.head()
print(df.info())

maxInt = 0

for i in range(len(table_MN[0])):

    if int(df['Dominant_Topic'][i]) > maxInt:
        maxInt = int(df['Dominant_Topic'][i])

holder = []

arryDict = []

malwareDict = {}

for i in range(len(table_MN[0])):
    malwareDict[df['Name'][i][33:]] = 0

#print(id(malwareDict))

for i in range(maxInt+1):
    #holder.append([])
    #arryDict = [i for i in malwareDict]
    #print(id(malwareDict))

    diction = copy.deepcopy(malwareDict)
    #print(id(diction))
    arryDict.append(diction)

#print(holder)
#print(arryDict)


# for i in range(len(arryDict)):
#     print(id(arryDict[i]))

df1 = pd.DataFrame(arryDict)
#df1['Adwo'][2]=2
#print(df1['Adwo'][2])
#print(df1)
#print(df1.info())

#arryDict[int(df['Dominant_Topic'][2])] = copy.deepcopy(malwareDict)
#print(id(arryDict[int(df['Dominant_Topic'][2])]))
#print(id(arryDict[int(df['Dominant_Topic'][5])]))

# print(df['Dominant_Topic'])
for i in range(len(table_MN[0])):
    df1[df['Name'][i][33:]][int(df['Dominant_Topic'][i])] = df1[df['Name'][i][33:]][int(df['Dominant_Topic'][i])] + 1 
    #holder[int(df['Dominant_Topic'][i])].append(df['Name'][i][33:])
    #print(int(df['Dominant_Topic'][i]))
    #print(df['Name'][i][33:])
    #print(arryDict[int(df['Dominant_Topic'][i])][df['Name'][i][33:]]+1)
#df1 = df1.drop(27)
#df1 = df1.drop(16)
#df1 = df1.drop(0)

#print()

nameOfDF = list(df1.columns)
#rowVal = list(df1.rows)
sumofVal = []

sumofRow = []

presentVal = []

dictholder = {}

for z in range(14):
    sumP = 0
    #bHolder = list(df1[nameOfDF[i]])
    for j in range(len(nameOfDF)):
        bHolder = list(df1[nameOfDF[j]])
       # print(z)
        #print(j)
        sumP = sumP + bHolder[z]
    sumofRow.append(sumP)
#sumofRow.pop(27)
#sumofRow.pop(16)
#sumofRow.pop(0)
print(sumofRow)

sumOfALLROWS = sum(sumofRow)
print(sumOfALLROWS)
presSum = []

for i in range(len(sumofRow)):
    v = sumofRow[i]/sumOfALLROWS
    presSum.append('%.3f' % v)
print(presSum)

for i in range(len(nameOfDF)):
    sumV = 0 
    sumP = 0
    #sumofVal.append(nameOfDF[i])
    vHolder = list(df1[nameOfDF[i]])
    #sumP = sumP + vHolder[i]
    #for m in vHolder:
        #print(m)

    for j in vHolder:
        sumV = sumV + j
    sumofVal.append(sumV)

print(sumofVal)

for i in range(len(nameOfDF)):
    #print(i)
    dictholder[nameOfDF[i]] = {} 
    #presentVal.append([])
    #df1[df['Name'][i][33:]].append({sumofVal[i],i})
    #df1[df['Name'][i][33:]][19] = sumofVal[i]
    #sumV = 0 
    vHolder = list(df1[nameOfDF[i]])
    for j in range(len(vHolder)):
        
        if vHolder[j] != 0:
            #sumV = j
            calc = (vHolder[j]/sumofVal[i])*100
            dictholder[nameOfDF[i]][j] = ('%.3f' % calc)
            #presentVal.append('%.3f' % calc)

#dictholder = pd.DataFrame(dictholder).sort_values(by=lambda x:x in nameOfDF ,na_position='last')
dictholder = pd.DataFrame(dictholder)

print("VALUES OF ROWS")
# for i in df1:
#     for j in i:
#         print(j)
#print(df1["Adwo"])

#print(presentVal)
print(dictholder)

# df1 = df1.drop(27)
# df1 = df1.drop(16)
# df1 = df1.drop(0)

print(df1)
#C:\Users\imasi\Desktop\Testingfor 4480\Result_W_Tri_11
##########WRITE TOO
dictholder.to_html("MODEL_W_ON_W1/dictholderOMGGOOD.html")
df1.to_html("MODEL_W_ON_W1/df1OMGGOOD.html")

    #print(list(df1[nameOfDF[i]]))

#print(df1['Dowgin'])
    #print(arryDict[int(df['Dominant_Topic'][i])])


    #arryDict[int(df['Dominant_Topic'][i])].update({df['Name'][i][33:]: arryDict[int(df['Dominant_Topic'][i])][df['Name'][i][33:]]+1})


#for i in range(len(holder)):
    #arryDict[i].sort()
    #print(i)
    #print(arryDict[i])

    



# #newDf=pd.DataFrame.from_dict(dictval)
# #print(newDf)


