import csv
import subprocess
from zipfile import ZipFile
from collections import deque
import sys



import os
#we choose family name = Adwo and SmsPay

# def extract():

#     dataFile = open("dataMD5","w+")
#     worddict = {}

#     with open("maldozer_metadata.csv", mode='r') as families:
#         csv_reader = csv.reader(families,delimiter=",")
#         for row in csv_reader:
#             if (row[3] == "Adwo" or row[3]=="SmsPay"):
#                 worddict[row[0]] = row[3]
#                 #dataFile.write(f'\t{row[0]}')


    #print(worddict)
    #dataFile.close()


def readgrab():

    # hashVal = []
    # holder = ""
    # #dataFile = open("dataMD5",'r')
    # data = dataFile.readline()

    # for i in data:
    #     if i != '\t':
    #         holder = holder + i
    #     else:
    #         hashVal.append(holder)
    #         holder = ""
    # dataFile.close()
   
    # hashVal.pop(0)
    
    #where data is held
    your_path = '/mnt/g/4480/maldozer_dataset/'
    files = os.listdir(your_path)
    for i in files:
        print(i)
        if i == 'extract' or i=='pythondexdump.py':
            continue
        else:
            with ZipFile(your_path+i,'r') as zip:
                #extract file
                zip.extract('classes.dex',your_path+'/extract')
                #rename file
                os.rename(your_path+'/extract/classes.dex',your_path+'/extract/'+i+'.dex')
            zip.close()
                
     


def dextojar():

    your_path = 'G:/4480/maldozer_dataset/extract/'
    files = os.listdir(your_path)
    for i in files:
        subprocess.call('C:/Users/imasi/Documents/Programming/eecs4481 project/dex2jar-2.0/d2j-dex2jar.bat'+' G:/4480/maldozer_dataset/extract/'+i+" -o "+"G:/4480/maldozer_dataset/extract/dex2jar/"+i[:-4]+'.jar')


def dextosamli():
    your_path = 'G:/4480/maldozer_dataset/extract/'
    files = os.listdir(your_path)
    for i in files:
        subprocess.call('C:/Users/imasi/Documents/Programming/eecs4481 project/dex2jar-2.0/d2j-baksmali.bat'+' G:/4480/maldozer_dataset/extract/'+i+" -o "+"G:/4480/maldozer_dataset/extract/dex2smali/"+i[:-4])




def readthejar():
    array = ['adwo','agent','appquanta','basebridge','ddlight','dowgin','droidkungfu','dropper','fakeapp','fakedoc','fakeinst','geinimi','gingerbreak','gingermaster','hiddenads','hiddenapp','infostealer','iop','kmin','kuguo','mobilepay','mseg','plankton','ratc','smskey','smspay','smsreg','smssend','smsspy','utchi','wapsx','youmi']
    
    maping = {}
    directory = 'com/'
  
   # maldata = open("maldozer_metadata.csv",mode='w')
    #csv_reader = csv.reader(families,delimiter=',')
    your_path = 'G:/4480/maldozer_dataset/extract/dex2jar/'
    files = os.listdir(your_path)
    for i in files:
        with ZipFile(your_path+i,'r') as zip:
            for a in array:
                if (directory+a+'/' in zip.namelist()):
                    #print(str(zip)[68:-15])
                    maping[str(zip)[68:-15]] = a
                    
            
    #$print(maps)

    

    # dataFile = open("dataMD5","w+")
    # worddict = {}

    with open("maldozer_metadata.csv", mode='w') as families:
        writer = csv.DictWriter(families,delimiter=",")
        for row in writer:
            for i in maping:
                if row[0] == i:
                    print(i)
                # writer.writeheader()
                # writer.writerow()




            # if (row[0] == "Adwo" or row[3]=="SmsPay"):
            #     worddict[row[0]] = row[3]
    #             dataFile.write(f'\t{row[0]}')


    #print(worddict)
    #dataFile.close()


def main():
    readgrab()
    #openfile()
    #dextojar()
    #readthejar()
    #dextosamli()

if __name__ == "__main__":
    main()